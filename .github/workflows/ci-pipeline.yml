# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
      - main
  pull_request:
    branches: 
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
env:
  maven_packages_cache: ".m2/repository"
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v2  
      - name: Cache
      uses: actions/cache@v2
      with:
        path: $maven_packages_cache
        key: ${{ runner.os }}-build
      - name: Run script
        run: mvn compile
      - name: artifacts
        uses: actions/artifacts@v2
        with:
          name: target
          path: "target/*"  
        
  test:
    runs-on: self-hosted
    needs: build
    steps:
      - name: Cache
      uses: actions/cache@v2
      with:
        path: $maven_packages_cache
        key: ${{ runner.os }}-build
      - name: Run test
        run: mvn test

  package:
    runs-on: self-hosted
    needs: build
    steps:
      - name: Cache
        uses: actions/cache@v2
        with:
          path: $maven_packages_cache
          key: ${{ runner.os }}-build
      - name: Run package
        run: mvn package -Dmaven.test.skip=true
      - name: artifacts
        uses: actions/artifacts@v2
        with:
          name: war
          path: "target/*.war"  
        
  deploy_test:
    runs-on: self-hosted
    needs: package
    environment:
      name: test
      action: start
      url: http://localhost:8081/game2048
      on_stop: stop_test
    steps:
      - name: start
        run: cp -f ./target/game2048.war /usr/local/tomcat/webapps
